* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  .speedd {
    position: absolute;
    display: flex;
    left: 40%;
    top: 20%;
    transform: translate(-50%, -50%);
  }
  
  .speed__wheel {
    position: absolute;
    width: 300px;
    height: 300px;
    border-radius: 50%;
    background-color: #000;
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 90%);
  }
  
  .speed__tick {
    display: flex;
    gap: 1px;
  }
  
  .tick {
    transform-origin: bottom;
    position: absolute;
    background: linear-gradient(to top, transparent 90%, red 90%);
    height: 140px;
    width: 2px;
    top: 10px;
    left: 50%;
    transform: rotate(calc(360deg / 27 * (var(--i) + 1))) rotateZ(-127deg);
  }
  
  .tick:nth-child(odd)::before {
    position: absolute;
    content: attr(value);
    color: #fff;
    left: -8px;
    top: 20px;
    z-index: 11;
    transform: rotate(calc(130deg + (-13.5deg * (var(--i) + 1))));
  }
  
  .pointer {
    position: relative;
    background: yellow;
    height: 190px;
    width: 20px;
    left: 140px;
    top: 3px;
    clip-path: polygon(9px 10px, 11px 10px, 20px 150px, 10px 190px, 0 150px);
    transform-origin: 10px 145px;
    animation: animate-pointer 10s ease-in-out infinite;
  }
  
  .pointer::before {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    background: gray;
    top: 140px;
    left: 5px;
    border-radius: 50%;
  }
  
  .endpoint {
    position: absolute;
    width: 7px;
    height: 7px;
    background: grey;
    top: 225px;
    left: 235px;
    border-radius: 50%;
  }
  
  @keyframes animate-pointer {
    0% {
      transform: rotate(-130deg);
    }
    80% {
      transform: rotate(120deg);
    }
    100% {
      transform: rotate(-130deg);
    }
  }
  
  /* loop for generating ticks */
  /* @for (var --i = 0; --i < 20;) {
    .tick:nth-child(#{--i + 1}) {
      --i: #{--i};
    }
  }
   */